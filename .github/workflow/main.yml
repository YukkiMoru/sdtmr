push:
    branches:
      - master

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag that matches the pattern v1.0.x
          latest_tag=$(git tag --list 'v1.0.*' --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          if [ -z "$latest_tag" ]; then
            echo "::set-output name=version::v1.0.0"
          else
            version_major=$(echo $latest_tag | cut -d. -f1)
            version_minor=$(echo $latest_tag | cut -d. -f2)
            version_patch=$(echo $latest_tag | cut -d. -f3)
            new_patch=$((version_patch + 1))
            echo "::set-output name=version::v1.0.$new_patch"
          fi

      - name: Create ZIP file
        run: |
          zip -r source_code.zip .

      - name: Create new Git tag and push
        env:
          sdtmrTOKEN: ${{ secrets.sdtmrTOKEN }}
        run: |
          new_version=${{ steps.get_tag.outputs.version }}
          echo "Creating new tag: $new_version"
          git tag $new_version
          git push https://x-access-token:${sdtmrTOKEN}@github.com/${{ github.repository }} $new_version

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.version }}
          release_name: Release ${{ steps.get_tag.outputs.version }}
          draft: false
          prerelease: false
          files: source_code.zip